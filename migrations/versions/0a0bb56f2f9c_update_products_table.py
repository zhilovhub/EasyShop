"""update products table

Revision ID: 0a0bb56f2f9c
Revises: c9d88a131668
Create Date: 2024-02-11 17:30:23.298746

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0a0bb56f2f9c'
down_revision: Union[str, None] = 'c9d88a131668'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('aiogram_states')
    op.add_column('orders', sa.Column('bot_token', sa.String(length=46), nullable=True))
    op.add_column('orders', sa.Column('products_id', sa.ARRAY(sa.BigInteger()), nullable=True))
    op.alter_column('orders', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.String(length=13),
               existing_nullable=False)
    op.drop_constraint('orders_product_id_fkey', 'orders', type_='foreignkey')
    op.drop_column('orders', 'product_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('orders', sa.Column('product_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.create_foreign_key('orders_product_id_fkey', 'orders', 'products', ['product_id'], ['id'])
    op.alter_column('orders', 'id',
               existing_type=sa.String(length=13),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.drop_column('orders', 'products_id')
    op.drop_column('orders', 'bot_token')
    op.create_table('aiogram_states',
    sa.Column('id', sa.VARCHAR(length=70), autoincrement=False, nullable=False),
    sa.Column('state', sa.VARCHAR(length=55), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='aiogram_states_pkey')
    )
    op.create_table('users',
    sa.Column('user_id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('status', sa.VARCHAR(length=55), autoincrement=False, nullable=False),
    sa.Column('registered_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('settings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey')
    )
    # ### end Alembic commands ###
