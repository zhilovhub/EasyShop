"""sd 

Revision ID: 135cb03a1d8f
Revises: 
Create Date: 2024-04-24 18:59:10.740733

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '135cb03a1d8f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('products', sa.Column('category', sa.BigInteger(), nullable=True))
    op.add_column('products', sa.Column('article', sa.String(), nullable=True))
    op.add_column('products', sa.Column('extra_options', sa.JSON(), nullable=True))
    op.create_foreign_key(None, 'products', 'categories', ['category'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.drop_column('products', 'extra_options')
    op.drop_column('products', 'article')
    op.drop_column('products', 'category')
    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), autoincrement=False, nullable=False),
    sa.Column('next_run_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('job_state', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='apscheduler_jobs_pkey')
    )
    op.create_index('ix_apscheduler_jobs_next_run_time', 'apscheduler_jobs', ['next_run_time'], unique=False)
    op.create_table('вузы',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='вузы_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('channels',
    sa.Column('channel_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('bot_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bots.bot_id'], name='channels_bot_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('channel_id', 'bot_id', name='channels_pkey')
    )
    op.create_table('описание_предметов',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('предмет', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('описание предмета', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='описание_предметов_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('предмет_index', 'описание_предметов', ['предмет'], unique=False)
    op.create_table('предметы',
    sa.Column('вуз', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('предмет', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['вуз'], ['вузы.id'], name='предметы_вуз_fkey'),
    sa.ForeignKeyConstraint(['предмет'], ['описание_предметов.id'], name='предметы_предмет_fkey'),
    sa.PrimaryKeyConstraint('вуз', 'предмет', name='предметы_pkey')
    )
    op.create_table('aiogram_states',
    sa.Column('id', sa.VARCHAR(length=70), autoincrement=False, nullable=False),
    sa.Column('state', sa.VARCHAR(length=55), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='aiogram_states_pkey')
    )
    # ### end Alembic commands ###
