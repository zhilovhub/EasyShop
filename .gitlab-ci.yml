stages:
#  - build
  - test
  - deploy

.standard-rules:
  rules:
    - if: '$CI_COMMIT_BRANCH != "master_release" && $CI_PIPELINE_SOURCE == "push"'
      when: on_success

#build-job:
#  extends:
#    - .standard-rules
#  stage: build
#  script:
#    - ls -ltra  # TODO install .env variables

test-pep8-job:
  image: python
  extends:
    - .standard-rules
  allow_failure: true
  stage: test
  script:
    - python -m venv venv
    - pip install ruff
    - ruff format --check
    - ruff check

deploy-job:
  extends:
    - .standard-rules
  stage: deploy
  before_script:
    - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )
    - mkdir -p ~/.ssh
    - echo $SSH_PRIVATE_KEY | base64 -d > ~/.ssh/id_rsa
    - echo >> ~/.ssh/id_rsa
    - chmod -R 600 ~/.ssh
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" >> ~/.ssh/config'
  script:
    - AUTHOR=$GITLAB_USER_LOGIN
    - echo $CI_PIPELINE_SOURCE
    - echo This commit is sent by $AUTHOR
    - |
      if [ $CI_COMMIT_BRANCH == master_debug ];
      then LABEL=debug;
      elif [ $AUTHOR == zhilovhub ];
      then LABEL=ilya;
      elif [ $AUTHOR == m0nkai ];
      then LABEL=arsen;
      elif [ $AUTHOR == V533 ];
      then LABEL=vova;
      elif [ $AUTHOR == lvovkir ];
      then LABEL=front;
      else LABEL=null;
      fi
    - if [ $LABEL == null ]; then exit 10; else echo Current label is $LABEL; fi
    - ssh $USER@$IP "bash autopull.sh $LABEL $CI_COMMIT_BRANCH"
