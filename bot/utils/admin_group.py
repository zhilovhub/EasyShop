from aiogram.types import Message, User

from bot.main import bot, config, logger

from enum import Enum


class EventTypes(Enum):
    NEW_USER = "üÜï –° –±–æ—Ç–æ–º <b>@{}</b> –∑–∞–≤–µ–ª –¥–∏–∞–ª–æ–≥ <b>–Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b>!\n\n" \
               "–ï–≥–æ –¥–∞–Ω–Ω—ã–µ:\n" \
               "id = <b>{}</b>, username = @<b>{}</b>\n" \
               "–ò–º—è = <b>{}</b>"
    STARTED_TRIAL = "üçü <b>@{}</b> (<b>{}</b>) –ø—Ä–∏–Ω—è–ª <b>–ø—Ä–æ–±–Ω—É—é</b> –ø–æ–¥–ø–∏—Å–∫—É! (<b>@{}</b>)"



async def send_event(user: User, event_type: EventTypes) -> None:
    try:
        bot_username = (await bot.get_me()).username
        message_text = ""
        match event_type:
            case EventTypes.NEW_USER:
                message_text = event_type.value.format(bot_username, user.id, user.username, user.full_name)
            case EventTypes.STARTED_TRIAL:
                message_text = event_type.value.format(user.username, user.id, bot_username)
        await bot.send_message(
            chat_id=config.ADMIN_GROUP_ID,
            text=message_text
        )
    except Exception as e:
        logger.info(e)
